module.exports = {
  env: {
    es6: true,
    node: true,
  },
  extends: [
    'eslint:recommended',
  ],
  plugins: [
    'import',
    'eslint-comments',
  ],
  rules: {
    // eslint-base
    'arrow-body-style': ['error', 'as-needed', { requireReturnForObjectLiteral: true }],
    'arrow-parens': 'off',
    'brace-style': ['error', 'stroustrup', { allowSingleLine: true }],
    'camelcase': 'error',
    'class-methods-use-this': 'off',
    'comma-dangle': ['error', 'always-multiline'],
    'comma-spacing': ['error', { before: false, after: true }],
    'comma-style': ['error', 'last'],
    'complexity': ['error', { max: 10 }],
    'constructor-super': 'error',
    'curly': ['error', 'all'],
    'default-case': 'error',
    'default-case-last': 'error',
    'dot-notation': 'error',
    'eol-last': 'error',
    'eqeqeq': ['error', 'always'],
    'func-style': ['error', 'declaration'],
    'guard-for-in': 'off',
    'id-blacklist': [
      'error',
      'any',
      'Number',
      'number',
      'String',
      'string',
      'Boolean',
      'boolean',
      'Undefined',
      'undefined',
    ],
    'id-match': 'error',
    'indent': ['error', 2, { SwitchCase: 1 }],
    'key-spacing': [1, { beforeColon: false, afterColon: true, mode: 'minimum' }],
    'keyword-spacing': ['error', { after: true }],
    'linebreak-style': ['error', 'unix'],
    'lines-between-class-members': ['error', 'always'],
    'max-classes-per-file': ['error', 1],
    'max-len': ['error', { code: 140 }],
    'max-lines': 'off',
    'new-cap': 'error',
    'new-parens': 'error',
    'no-bitwise': 'error',
    'no-caller': 'error',
    'no-cond-assign': 'error',
    'no-console': 'off',
    'no-debugger': 'error',
    'no-empty': 'error',
    'no-eval': 'error',
    'no-fallthrough': 'error',
    'no-floating-decimal': 'error',
    'no-invalid-this': 'off',
    'no-irregular-whitespace': 'error',
    'no-magic-numbers': 'off',
    'no-mixed-operators': 'error',
    'no-process-exit': 'off',
    'no-nested-ternary': 'error',
    'no-new-wrappers': 'error',
    'no-null/no-null': 'off',
    'no-redeclare': 'error',
    'no-shadow': 'off',
    'no-template-curly-in-string': 'error',
    'no-throw-literal': 'error',
    'no-trailing-spaces': 'error',
    'no-undef-init': 'error',
    'no-underscore-dangle': 'off',
    'no-unreachable': 'error',
    'no-unsafe-finally': 'error',
    'no-unused-expressions': 'error',
    'no-unused-labels': 'error',
    'no-unused-vars': 'error',
    'no-use-before-define': 'error',
    'no-var': 'error',
    'no-void': 'error',
    'object-shorthand': 'error',
    'one-var': [
      'error',
      'never',
    ],
    'operator-linebreak': ['error', 'before', { overrides: { '+': 'after' }}],
    'padding-line-between-statements': 'off',
    'prefer-arrow/prefer-arrow-functions': 'off',
    'prefer-const': 'error',
    'prefer-object-spread': 'error',
    'prefer-template': 'off',
    'quote-props': 'off',
    'quotes': ['error', 'single', 'avoid-escape'],
    'radix': 'off',
    'space-before-blocks': 'error',
    'space-before-function-paren': ['error', {
      anonymous: 'always',
      named: 'never',
      asyncArrow: 'always',
    }],
    'spaced-comment': 'error',
    'space-in-parens': ['error', 'never'],
    'use-isnan': 'error',
    'valid-typeof': 'off',
    'wrap-iife': 'error',
    'yoda': 'error',

    // eslint-plugin-eslint-comment
    'eslint-comments/disable-enable-pair': ['error', {
      allowWholeFile: true,
    }],
    'eslint-comments/no-aggregating-enable': 'error',
    'eslint-comments/no-duplicate-disable': 'error',
    'eslint-comments/no-unlimited-disable': 'error',
    'eslint-comments/no-unused-disable': 'error',
    'eslint-comments/no-unused-enable': 'error',
    'eslint-comments/no-use': ['error', {
      allow: [
        'eslint-disable',
        'eslint-disable-line',
        'eslint-disable-next-line',
        'eslint-enable',
      ],
    }],

    // eslint-plugin-import
    'import/first': 'error',
    'import/newline-after-import': 'error',
    'import/no-absolute-path': 'error',
    'import/no-amd': 'error',
    'import/no-default-export': 'error',
    'import/no-extraneous-dependencies': ['error', {
      devDependencies: true,
      peerDependencies: true,
      optionalDependencies: false,
    }],
    'import/no-mutable-exports': 'error',
    'import/no-named-default': 'error',
    'import/no-named-export': 'off', // we want everything to be a named export
    'import/no-self-import': 'error',
    'import/prefer-default-export': 'off', // we want everything to be named
    'import/no-unassigned-import': 'off',
    'import/order': 'off',
  },
};
